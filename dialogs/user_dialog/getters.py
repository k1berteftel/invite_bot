from aiogram import Bot
from aiogram.types import Message, CallbackQuery, User, InlineKeyboardButton, InlineKeyboardMarkup, ContentType
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.kbd import Button
from aiogram_dialog.widgets.input import ManagedTextInput, MessageInput
from aiogram_dialog.api.entities import MediaAttachment, MediaId

from states.state_groups import startSG
from config_data.config import Config, load_config
from database.action_data_class import DataInteraction

config: Config = load_config()


async def card_getter(dialog_manager: DialogManager, **kwargs):
    months = dialog_manager.dialog_data.get('months')
    print(months)
    if months == 2:
        price = 79
        months = '2 –º–µ—Å—è—Ü–∞'
    elif months == 6:
        price = 229
        months = '6 –º–µ—Å—è—Ü–µ–≤'
    else:
        months = '12 –º–µ—Å—è—Ü–µ–≤'
        price = 429
    dialog_manager.dialog_data['price'] = price
    return {
        'months': months,
        'price': price
    }


async def crypto_getter(dialog_manager: DialogManager, **kwargs):
    months = dialog_manager.dialog_data.get('months')
    print(months)
    if months == 2:
        price = 79
        dialog_manager.dialog_data['price'] = price
    elif months == 6:
        price = 229
    else:
        price = 429
    dialog_manager.dialog_data['price'] = price
    return {'price': price}


async def sub_getter(session: DataInteraction, event_from_user: User, **kwargs):
    sub = await session.get_sub_date(event_from_user.id)
    if sub:
        is_sub = f'‚úÖ–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏</b>: {sub}\n'
    else:
        is_sub = '‚ùå–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
    return {
        'id': event_from_user.id,
        'sub': is_sub
    }


async def menu(event_from_user: User, **kwargs):
    admin = False
    if event_from_user.id in config.bot.admin_ids:
        admin = True
    image_id = "AgACAgIAAxkBAAIBw2Z3BDt2vUYgAfpH2UnNzBZ76xkfAAK33jEbWRa4Sx87TPnSUD6jAQADAgADeQADNQQ"  # Your file_id
    image = MediaAttachment(ContentType.PHOTO, file_id=MediaId(image_id))
    text = '<b>–ó–∞–∫—Ä—ã—Ç—ã–π –ö–ª—É–± –ø–æ –ó–∞—Ä–∞–±–æ—Ç–∫—É –ë–æ–π—Ü–æ–≤—Å–∫–∏–π –ö—É—Ä—Ç</b> üíÄ\n\n' \
           '<em>–ö–ª—É–± —Å–æ–∑–¥–∞–Ω –¥–ª—è –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å!</em>\n\n' \
           '–ó–¥–µ—Å—å –æ–Ω–ª–∞–π–Ω —Ñ–æ—Ä–º–∞—Ç. –ë–∞–±–∫–∏ –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞.\n–ó–¥–µ—Å—å —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –∫–∞–∫ —Ñ–∏–∑–∏—á–µ—Å–∫–∏, —Ç–∞–∫ –∏ –º–µ–Ω—Ç–∞–ª—å–Ω–æ.\n\n' \
           '<em>–≠—Ç–æ –º–µ—Å—Ç–æ —Å—Ç–∞–Ω–µ—Ç —Ç–≤–æ–µ–π –æ—Ç–ø—Ä–∞–≤–Ω–æ–π —Ç–æ—á–∫–æ–π –≤ –Ω–æ–≤—É—é –∂–∏–∑–Ω—å!</em> üèÜ\n\n' \
           '<b>–ï–°–õ–ò –¢–ï–ë–Ø –≠–¢–û –í–î–û–•–ù–û–í–õ–Ø–ï–¢, –¢–û –¢–´ –ì–û–¢–û–í.</b>\n<b>–ï–°–õ–ò –≠–¢–û –ù–ï –ü–†–û –¢–ï–ë–Ø ‚Äî –ü–†–û–ô–î–ò –ú–ò–ú–û.</b>\n\n' \
           '–ì–ê–†–ê–ù–¢–ò–Ø –£–°–ü–ï–•–ê ‚Äî –¢–í–û–Ø –õ–ò–ß–ù–ê–Ø –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨'
    return {'admin': admin,
            'text': text,
            'photo': image}

async def about(**kwargs):
    text = '<b>–ù–ê–•–û–î–Ø–°–¨ –í –ö–õ–£–ë–ï –¢–´ –ü–û–õ–£–ß–ò–®–¨üëá</b>\n\n<b>‚úÖ –ú–ê–ù–ò–ú–ï–ô–ö–ò–ù–ì </b>\n\n' \
           '–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏-–Ω–∞–≤—ã–∫, –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–µ—Ç –æ–±—É—á–∏—Ç—å—Å—è \n–∫–∞–∂–¥—ã–π, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏—à—å –∑–Ω–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã. \n' \
           '<b>–ò –Ø –î–ê–ú –¢–ï–ë–ï –ï–ì–û.</b>\n\n<b>‚úÖ –ö–û–ú–ê–ù–î–ê</b>\n\n–ù–∞ —Ç–≤–æ–µ–º –ø—É—Ç–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è <b>–í–û–ó–ú–û–ñ–ù–û–°–¢–ò</b>. ' \
           '–¢—ã –ø—Ä–æ–±—É–∂–¥–∞–µ—à—å—Å—è. –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥—Å—Ç–∏–ª–∫–æ–π –¥–ª—è –æ–±—â–µ—Å—Ç–≤–∞ –∏ —Å—Ç—ã–¥–∏—Ç—å—Å—è —Å–≤–æ–∏—Ö –∞–º–±–∏—Ü–∏–π.\n\n ' \
           '<b>‚úÖ –ì–ê–ô–î–´ –ò –ü–û–°–¢–´</b>\n\n–í –Ω–∏—Ö –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–≤–æ–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è, –Ω–∞—á–∏–Ω–∞—è ' \
           '–æ—Ç –º—ã—à–ª–µ–Ω–∏—è, –º–æ—Ç–∏–≤–∞—Ü–∏–∏, –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –¥–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤. <b>–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –î–û–°–¢–£–ü–ù–´–ú –Ø–ó–´–ö–û–ú</b>\n\n' \
           '<b>‚úÖ –ö–û–ú–¨–Æ–ù–ò–¢–ò</b>\n\n–ü–æ–¥–∫–∞—Å—Ç—ã, —Å–æ–∑–≤–æ–Ω—ã, –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Ç–æ–ø–æ–≤—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö' \
           '–Ω–∏—à–∞—Ö. –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ —á–∞—Ç –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤.\n–¢–´ - –Ω–µ –æ–¥–∏–Ω —Å —Ç–æ–±–æ–π –±—Ä–∞—Ç—Å—Ç–≤–æ!\n\n' \
           '<b>‚ùóÔ∏è–í –ò–¢–û–ì–ï –¢–´ –î–†–£–ì–û–ô –ß–ï–õ–û–í–ï–ö‚ùóÔ∏è</b>\n\n<del>–Ø –Ω–µ —É–º–µ—é –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, —è –Ω–µ —É–º–µ—é –∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –¥–µ–≤—É—à–∫–∞–º–∏, —è ' \
           '–Ω–µ —É–º–µ—é –≤–µ—Å—Ç–∏ —Å–µ–±—è –≤ –æ–±—â–µ—Å—Ç–≤–µ, —è –Ω–µ —É–≤–µ—Ä–µ–Ω –≤ —Å–µ–±–µ, –º–Ω–µ –ø–ª–æ—Ö–æ –º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ, —É –º–µ–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è' \
           '</del>\n\n<b>–ñ–î–£ –¢–ï–ë–Ø –í –ö–õ–£–ë–ï üëáüëáüëá</b>'
    return {'text': text}


async def months_save(clb: CallbackQuery, button: Button, dialog_manager: DialogManager):
    print(clb.data)
    if clb.data == '2_month':
        dialog_manager.dialog_data['months'] = 2
    elif clb.data.startswith('6'):
        dialog_manager.dialog_data['months'] = 6
    else:
        dialog_manager.dialog_data['months'] = 12

    await dialog_manager.switch_to(state=startSG.subscription)


async def check_cryptopay(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    user: User = dialog_manager.middleware_data.get('event_from_user')
    bot: Bot = dialog_manager.middleware_data.get('bot')
    date = dialog_manager.dialog_data.get('months')
    # –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–Ω–Ω–∏–∫–∏
    print(bot)
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text='–î–∞', callback_data='yes'),
            InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no')
        ]]
    )
    text = f'<b>–ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –æ–ø–ª–∞—Ç—ã –ø–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ</b>\n' \
           f'–î–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ:\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text}\n' \
           f'–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (–º–µ—Å—è—Ü—ã): {date}\n' \
           f'–î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ:\n   –ò–º—è: {user.full_name if user.full_name else "–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ"}\n' \
           f'   –ê–π–¥–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {user.id} (–¢—Ä–µ–±—É–µ—Ç—Å—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö)\n' \
           f'   Username: {user.username if user.username else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}\n\n' \
           f'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ª–∏ –≤—ã –Ω–∞–ª–∏—á–∏–µ –æ–ø–ª–∞—Ç—ã —é–∑–µ—Ä–∞?'
    try:
        for admin_id in config.bot.admin_ids:
            await bot.send_message(admin_id, text=text, reply_markup=keyboard)
    except Exception as err:
        print(err)
    await msg.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É, –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤—ã –±—É–¥–µ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª')
    await dialog_manager.done()


async def check_cardpay(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    user: User = dialog_manager.middleware_data.get('event_from_user')
    bot: Bot = dialog_manager.middleware_data.get('bot')
    date = dialog_manager.dialog_data.get('months')
    # –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–Ω–Ω–∏–∫–∏
    text = f'<b>–ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –æ–ø–ª–∞—Ç—ã –ø–æ –∫–∞—Ä—Ç–µ</b>\n' \
           f'–î–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ:\n' \
           f'–î–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (–º–µ—Å—è—Ü—ã): {date}\n' \
           f'–î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ:\n   –ò–º—è: {user.full_name if user.full_name else "–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ"}\n' \
           f'   –ê–π–¥–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {user.id} (–¢—Ä–µ–±—É–µ—Ç—Å—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö)\n' \
           f'   Username: {user.username if user.username else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}\n\n' \
           f'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ª–∏ –≤—ã –Ω–∞–ª–∏—á–∏–µ –æ–ø–ª–∞—Ç—ã —é–∑–µ—Ä–∞?'

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text='–î–∞', callback_data='yes'),
            InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no')
        ]]
    )

    try:
        for admin_id in config.bot.admin_ids:
            await bot.send_photo(chat_id=admin_id, photo=msg.photo[-1].file_id, caption=text, reply_markup=keyboard)
    except Exception as err:
        print(err)
    await msg.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É, –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤—ã –±—É–¥–µ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª')
    await dialog_manager.done()
